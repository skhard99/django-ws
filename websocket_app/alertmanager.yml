global:
  # Global SMTP configuration (you can configure this for email alerts)
  smtp_smarthost: 'localhost:587'
  smtp_from: 'alerts@yourcompany.com'
  smtp_auth_username: 'your-email@yourcompany.com'
  smtp_auth_password: 'your-password'

# The root route on which each incoming alert enters
route:
  group_by: ['alertname', 'deployment_color']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 1h
  receiver: 'web.hook'
  routes:
    - match:
        severity: critical
      receiver: 'critical-alerts'
    - match:
        severity: warning
      receiver: 'warning-alerts'

receivers:
  - name: 'web.hook'
    webhook_configs:
      - url: 'http://localhost:5001/alerts'
        send_resolved: true

  - name: 'critical-alerts'
    email_configs:
      - to: 'admin@yourcompany.com'
        headers:
          Subject: '[CRITICAL] WebSocket App Alert: {{ .GroupLabels.alertname }}'
        html: |
          Alert: {{ .GroupLabels.alertname }}<br>
          Deployment: {{ .GroupLabels.deployment_color }}<br>
          <br>
          {{ range .Alerts }}
          Summary: {{ .Annotations.summary }}<br>
          Description: {{ .Annotations.description }}<br>
          {{ end }}
    webhook_configs:
      - url: 'http://localhost:5001/alerts'
        send_resolved: true

  - name: 'warning-alerts'
    webhook_configs:
      - url: 'http://localhost:5001/alerts'
        send_resolved: true

# Inhibit rules allow to mute a set of alerts when another alert is firing
inhibit_rules:
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'deployment_color']